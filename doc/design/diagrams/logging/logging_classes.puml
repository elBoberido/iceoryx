@startuml

package platform_building_blocks {

enum LogLevel {
    OFF = 0,
    FATAL,
    ERROR,
    WARN,
    INFO,
    DEBUG,
    TRACE,
}

class Logger <Impl> {
  + {static} void init(constLogLevel logLevel = LogLevelFromEnvOr(LogLevel::Info))
  + {static} Logger& get()
  + {static} LogLevel minimalLogLevel()
  + {static} bool ignoreLogLevel()
  + {static} Logger* setActiveLogger(Logger* newLogger)
  - void initLoggerInternal(LogLevel logLevel)
  - {static} Logger* activeLogger<T>(Logger* newLogger = nullptr)
}

class ConsoleLogger {
  + {static} LogLevel getLogLevel()
  + void setLogLevel(LogLevel logLevel)
  # ConsoleLogger()
  # {abstract} void initLogger(LogLevel logLevel)
  # {abstract} void setupNewLogMessage(const char* file, const int line, const char* function, LogLevel logLevel)
  # {abstract} void flush()
  # std::tuple<const char*, uint64_t> getLogBuffer() const
  # void assumeFlushed()
  # void LogString(const char* message)
  # void logI64Dec(const int64_t value)
  # void logU64Dec(const uint64_t value)
  # void logU64Hex(const uint64_t value)
  # void logU64Oct(const uint64_t value)
  # void logBool(const bool value)
  # void logFloat(const float value)
  # void logDouble(const double value)
  # void logLongDouble(const long double value)
}

}

package iceoryx_hoofs_testing {

class TestingLogger {
  + {static} void init()
  + {static} uint64_t getNumberOfLogMessages()
  + {static} std::vector<std::string> getLogMessages()
  + void clearLogBuffer()
  + void printLogBuffer()
  - void TestingLogger()
  - void flush()
}

}

package iceoryx_hoofs {

class LogHex <T> {}

class LogOct <T> {}

class LogStream {
  + LogStream(const char* file, const int line, const char* function, LogLevel logLevel)
  + void flush()
  + LogStream& self()
  + LogStream& operator<<(const char* cstr)
  + LogStream& operator<<(const T value)
  + LogStream& operator<<(const LogHex<T>&& value)
  + LogStream& operator<<(const LogOct<T>&& value)
  + LogStream& operator<<(const Callable&& c)
}

}

TestingLogger --|> ConsoleLogger
ConsoleLogger <|-- Logger : via Impl
Logger <.. LogStream : <<friend>>
LogStream .> LogHex : <<friend>>
LogStream .> LogOct : <<friend>>

@enduml
